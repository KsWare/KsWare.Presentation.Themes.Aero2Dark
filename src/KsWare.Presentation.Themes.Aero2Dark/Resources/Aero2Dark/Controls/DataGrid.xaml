<ResourceDictionary 
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:aero2Dark="clr-namespace:KsWare.Presentation.Themes.Aero2Dark"
		>

	<ResourceDictionary.MergedDictionaries>
		<SharedResourceDictionary Source="/KsWare.Presentation.Themes.Aero2Dark;component\Resources\Aero2Dark\ThemeColors.xaml"/>

		<ResourceDictionary>
			<SolidColorBrush x:Key="Aero2Dark.DataGrid.Glyph"                                Color="{StaticResource Aero2Dark.ThemeColors.ControlTextColor}"/>
			<SolidColorBrush x:Key="Aero2Dark.ColumnFloatingHeader.Border"                   Color="#FF688CAF"/> <!-- #FF688CAF -->
			<SolidColorBrush x:Key="Aero2Dark.DataGridColumnHeader.DropSeparator.Background" Color="#FF000080"/> <!-- #FF000080 -->
			<SolidColorBrush x:Key="Aero2Dark.DataGridRow.ValidationError.Foreground"        Color="Red"/> <!-- Red -->
			<SolidColorBrush x:Key="Aero2Dark.DataGridColumnHeader.Background"               Color="#2E2E2E"/> <!-- n.d. -->
			<SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}"                 Color="#FF000000" /> <!-- #FF000000 -->
		</ResourceDictionary>

		<LookupResourceDictionary ResourceKey="Aero2Dark.DataGrid.Brushes.Overrides"/>
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="Aero2Dark.DataGridCell.HighContrastFocusVisualStyle">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid>
            <Rectangle Margin="1,1,1,1"
                       StrokeThickness="1"
                       Stroke="{StaticResource Aero2Dark.ThemeColors.HighlightTextBrush}"
                       SnapsToDevicePixels="true"/>
            <Rectangle Margin="1,1,1,1"
                       StrokeThickness="1"
                       Stroke="{StaticResource Aero2Dark.ThemeColors.WindowTextBrush}"
                       StrokeDashArray="2 2"
                       SnapsToDevicePixels="true"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <BooleanToVisibilityConverter x:Key="Aero2Dark.DataGrid.Bool2VisibilityConverter" />

  <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type DataGrid}, ResourceId=DataGridSelectAllButtonStyle}"
         TargetType="{x:Type Button}">
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="{x:Type Button}">
                  <Grid>
                      <Rectangle x:Name="Border"
                         Fill="{StaticResource Aero2Dark.ThemeColors.ControlBrush}"
                         SnapsToDevicePixels="True" />
                      <Polygon x:Name="Arrow"
	                       HorizontalAlignment="Right"
	                       VerticalAlignment="Bottom"
	                       Margin="8,8,3,3"
	                       Opacity="0.15"
	                       Fill="Black"
	                       Stretch="Uniform"
	                       Points="0,10 10,10 10,0" />
                  </Grid>
                  <ControlTemplate.Triggers>
                      <Trigger Property="IsMouseOver" Value="True">
                          <Setter TargetName="Border" Property="Stroke" Value="{StaticResource Aero2Dark.ThemeColors.ControlDarkBrush}" />
                      </Trigger>
                      <Trigger Property="IsPressed" Value="True">
                          <Setter TargetName="Border" Property="Fill" Value="{StaticResource Aero2Dark.ThemeColors.ControlDarkBrush}" />
                      </Trigger>
                      <Trigger Property="IsEnabled" Value="False">
                          <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
                      </Trigger>
                  </ControlTemplate.Triggers>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>

  <!-- {x:Type DataGrid} -->
  <Style x:Key="Aero2Dark.DataGridStyle" TargetType="{x:Type DataGrid}">
      <Setter Property="Background"
                    Value="{StaticResource Aero2Dark.ThemeColors.ControlBrush}"/>
      <Setter Property="Foreground"
                    Value="{StaticResource Aero2Dark.ThemeColors.ControlTextBrush}"/>
      <Setter Property="BorderBrush" Value="#FF688CAF" />
      <Setter Property="BorderThickness" Value="1" />
      <!-- This is needed to force DG to have a non-default value.  Otherwise the DGR.DetailsVisibility cannot have a value of VisibleWhenSelected by default. -->
      <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
      <Setter Property="ScrollViewer.CanContentScroll"
                    Value="true"/>
      <Setter Property="ScrollViewer.PanningMode"
              Value="Both"/>
      <Setter Property="Stylus.IsFlicksEnabled"
              Value="False"/>
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="{x:Type DataGrid}">
                  <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="True"
                    Padding="{TemplateBinding Padding}">
                      <ScrollViewer   Focusable="false"
                              Name="DG_ScrollViewer">
                          <ScrollViewer.Template>
                              <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                  <Grid>
                                      <Grid.RowDefinitions>
                                          <RowDefinition Height="Auto"/>
                                          <RowDefinition Height="*"/>
                                          <RowDefinition Height="Auto"/>
                                      </Grid.RowDefinitions>

                                      <Grid.ColumnDefinitions>
                                          <ColumnDefinition Width="Auto"/>
                                          <ColumnDefinition Width="*"/>
                                          <ColumnDefinition Width="Auto"/>
                                      </Grid.ColumnDefinitions>

                                      <!--Left Column Header Corner -->
                                      <Button Command="{x:Static DataGrid.SelectAllCommand}"
                                              Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=CellsPanelHorizontalOffset}"
                                              Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type DataGrid}, ResourceId=DataGridSelectAllButtonStyle}}"
                                              Focusable="false"
                                              Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}}" />
                                      <!--Column Headers-->
                                      <DataGridColumnHeadersPresenter Grid.Row="0" Grid.Column="1"
                                                                      Name="PART_ColumnHeadersPresenter"
                                                                      Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}}"/>

                                      <!--DataGrid content-->
                                      <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.ColumnSpan="2"
                                                              Grid.Column="0"
                                                              CanContentScroll="{TemplateBinding CanContentScroll}" />

                                      <ScrollBar Grid.Row="1" Grid.Column="2" Name="PART_VerticalScrollBar"
                                               Orientation="Vertical"
                                               Maximum="{TemplateBinding ScrollableHeight}"
                                               ViewportSize="{TemplateBinding ViewportHeight}"
                                               Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                               Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                                      <Grid Grid.Row="2" Grid.Column="1">
                                          <Grid.ColumnDefinitions>
                                              <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}"/>
                                              <ColumnDefinition Width="*"/>
                                          </Grid.ColumnDefinitions>
                                          <ScrollBar Grid.Column="1"
                                                     Name="PART_HorizontalScrollBar"
                                                     Orientation="Horizontal"
                                                     Maximum="{TemplateBinding ScrollableWidth}"
                                                     ViewportSize="{TemplateBinding ViewportWidth}"
                                                     Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                     Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                                      </Grid>
                                  </Grid>
                              </ControlTemplate>
                          </ScrollViewer.Template>
                          <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                      </ScrollViewer>
                  </Border>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
      <Style.Triggers>
          <MultiTrigger>
          <MultiTrigger.Conditions>
              <Condition Property="IsGrouping" Value="true" />
              <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
          </MultiTrigger.Conditions>
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
          </MultiTrigger>
      </Style.Triggers>
  </Style>

  <!-- {x:Type DataGridColumnHeadersPresenter} -->
  <Style x:Key="Aero2Dark.DataGridColumnHeadersPresenterStyle" TargetType="{x:Type DataGridColumnHeadersPresenter}">
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
                  <Grid>
                      <DataGridColumnHeader IsHitTestVisible="False" Name="PART_FillerColumnHeader"/>
                      <ItemsPresenter />
                  </Grid>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>


  <Style x:Key="Aero2Dark.DataGrid.ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
      <Setter Property="Width" Value="8"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Cursor" Value="SizeWE"/>
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="{x:Type Thumb}">
                  <Border Padding="{TemplateBinding Padding}"
                      Background="{TemplateBinding Background}"/>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>

  <Style x:Key="Aero2Dark.DataGrid.RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
      <Setter Property="Height" Value="8"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Cursor" Value="SizeNS"/>
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="{x:Type Thumb}">
                  <Border Padding="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"/>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>

  <Style x:Key="{x:Static DataGridColumnHeader.ColumnFloatingHeaderStyleKey}" TargetType="{x:Type Control}">
      <Setter Property="Opacity" Value="0.6"/>
      <Setter Property="BorderBrush" Value="{StaticResource Aero2Dark.ColumnFloatingHeader.Border}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="{x:Type Control}">
                  <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding ="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}">
                      <Grid>
                          <Canvas Name="PART_VisualBrushCanvas" Margin="{TemplateBinding Margin}" />
                      </Grid>
                  </Border>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>

  <Style x:Key="{x:Static DataGridColumnHeader.ColumnHeaderDropSeparatorStyleKey}" TargetType="{x:Type Separator}">
      <Setter Property="Background" Value="{StaticResource Aero2Dark.DataGridColumnHeader.DropSeparator.Background}" />
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="{x:Type Separator}">
                  <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                  </Border>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>

  <!-- {x:Type DataGridRow} -->
  <Style x:Key="Aero2Dark.DataGridRowStyle" TargetType="{x:Type DataGridRow}">
      <Setter Property="Background" Value="{StaticResource Aero2Dark.ThemeColors.WindowBrush}" />
      <Setter Property="SnapsToDevicePixels" Value="true"/>
      <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
      <Setter Property="ValidationErrorTemplate">
          <Setter.Value>
              <ControlTemplate>
                  <TextBlock Margin="2,0,0,0" VerticalAlignment="Center" Foreground="{StaticResource Aero2Dark.DataGridRow.ValidationError.Foreground}" Text="!" />
          </ControlTemplate>
          </Setter.Value>
      </Setter>
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="{x:Type DataGridRow}">
                  <Border x:Name="DGR_Border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="True">
                      <SelectiveScrollingGrid>
                          <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="Auto"/>
                              <ColumnDefinition Width="*"/>
                          </Grid.ColumnDefinitions>

                          <Grid.RowDefinitions>
                              <RowDefinition Height="*"/>
                              <RowDefinition Height="Auto"/>
                          </Grid.RowDefinitions>

                          <DataGridCellsPresenter Grid.Column="1"
                                           ItemsPanel="{TemplateBinding ItemsPanel}"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                          <DataGridDetailsPresenter  SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"
                                              Grid.Column="1" Grid.Row="1"
                                              Visibility="{TemplateBinding DetailsVisibility}" />

                          <DataGridRowHeader SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Grid.Row="0"
                                             Grid.RowSpan="2" Grid.Column="0"
                                             Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}}"/>
                      </SelectiveScrollingGrid>
                  </Border>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
      <Style.Triggers>
          <Trigger Property="IsNewItem" Value="True">
              <Setter Property="Margin" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NewItemMargin}"/>
          </Trigger>
      </Style.Triggers>
  </Style>

  <!-- {x:Type DataGridCellsPresenter} -->
  <Style x:Key="Aero2Dark.DataGridCellsPresenterStyle" TargetType="{x:Type DataGridCellsPresenter}">
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="{x:Type DataGridCellsPresenter}">
                  <ItemsPresenter />
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>

	<!-- {x:Type DataGridCell} -->
  <Style x:Key="Aero2Dark.DataGridCellStyle}" TargetType="{x:Type DataGridCell}">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="Transparent" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="{x:Type DataGridCell}">
                  <Border Name="Bd" 
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="True">
                      <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                  </Border>
                  <ControlTemplate.Triggers>
                      <MultiDataTrigger>
                          <MultiDataTrigger.Conditions>
                              <!-- <Condition Binding="{Binding Path=(base:AccessibilitySwitches.UseNetFx472CompatibleAccessibilityFeatures)}" Value="false"/> -->
                              <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true"/>
                              <Condition Binding="{Binding Path=IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="true"/>
                          </MultiDataTrigger.Conditions>
                          <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Aero2Dark.ThemeColors.HighlightTextBrush}"/>
                          <Setter TargetName="Bd" Property="BorderThickness" Value="1.5"/>
                      </MultiDataTrigger>
                  </ControlTemplate.Triggers>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
      <Style.Triggers>
          <Trigger Property="IsSelected" Value="True">
              <Setter Property="Background" Value="{StaticResource Aero2Dark.ThemeColors.HighlightBrush}" />
              <Setter Property="Foreground" Value="{StaticResource Aero2Dark.ThemeColors.HighlightTextBrush}" />
              <Setter Property="BorderBrush" Value="{StaticResource Aero2Dark.ThemeColors.HighlightBrush}" />
          </Trigger>
          <Trigger Property="IsKeyboardFocusWithin" Value="True">
              <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
          </Trigger>
          <MultiTrigger>
              <MultiTrigger.Conditions>
                  <Condition Property="IsSelected" Value="true"/>
                  <Condition Property="Selector.IsSelectionActive" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter Property="Background" Value="{StaticResource Aero2Dark.ThemeColors.InactiveSelectionHighlightBrush}"/>
              <Setter Property="BorderBrush" Value="{StaticResource Aero2Dark.ThemeColors.InactiveSelectionHighlightBrush}"/>
              <Setter Property="Foreground" Value="{StaticResource Aero2Dark.ThemeColors.InactiveSelectionHighlightTextBrush}"/>
          </MultiTrigger>
          <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{StaticResource Aero2Dark.ThemeColors.GrayTextBrush}"/>
          </Trigger>
          <MultiDataTrigger>
            <MultiDataTrigger.Conditions>
              <!-- <Condition Binding="{Binding Path=(base:AccessibilitySwitches.UseNetFx47CompatibleAccessibilityFeatures)}" Value="false"/> -->
              <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true"/>
            </MultiDataTrigger.Conditions>
            <Setter Property="FocusVisualStyle" Value="{StaticResource Aero2Dark.DataGridCell.HighContrastFocusVisualStyle}"/>
          </MultiDataTrigger>
      </Style.Triggers>
  </Style>

  <Style x:Key="{x:Static DataGridComboBoxColumn.TextBlockComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="{x:Type ComboBox}">
                  <ContentPresenter Margin="1,1,1,1"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              IsHitTestVisible="false" />
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>

  <SolidColorBrush x:Key="Aero2Dark.DataGridColumnHeader.Static.Background" Color="#2E2E2E"/>
  <SolidColorBrush x:Key="Aero2Dark.DataGridColumnHeader.Static.Border" Color="#2E2E2E"/>
  <SolidColorBrush x:Key="Aero2Dark.DataGridColumnHeader.Hover.Background" Color="#3D3D3D"/>
	<SolidColorBrush x:Key="Aero2Dark.DataGridColumnHeader.Pressed.Background" Color="#1F1F1F"/>
  <SolidColorBrush x:Key="Aero2Dark.DataGridColumnHeader.Static.Glyph" Color="#E2E2E2"/>

	<!-- {x:Type DataGridColumnHeader} -->
  <Style x:Key="Aero2Dark.DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}" >
      <Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="Background" Value="{StaticResource Aero2Dark.DataGridColumnHeader.Static.Background}"/>
      <Setter Property="BorderBrush" Value="{StaticResource Aero2Dark.DataGridColumnHeader.Static.Border}"/>
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                  <Grid>
                      <!--<aero2Dark:DataGridHeaderBorder SortDirection="{TemplateBinding SortDirection}"
                                                      IsHovered="{TemplateBinding IsMouseOver}"
                                                      IsPressed="{TemplateBinding IsPressed}"
                                                      IsClickable="{TemplateBinding CanUserSort}"
                                                      Background="{TemplateBinding Background}"
                                                      BorderBrush="{TemplateBinding BorderBrush}"
                                                      BorderThickness="{TemplateBinding BorderThickness}"
                                                      Padding ="{TemplateBinding Padding}"
                                                      SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                                                      SeparatorBrush="{TemplateBinding SeparatorBrush}">
                          <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True" />
                      </aero2Dark:DataGridHeaderBorder>-->
									<Border 
	                      x:Name="HeaderBorder"
	                      Background="{TemplateBinding Background}" 
	                      BorderBrush="{TemplateBinding BorderBrush}" 
	                      BorderThickness="{TemplateBinding BorderThickness}"
	                      Padding="{TemplateBinding Padding}">
							<Grid Margin="4">
								<ContentPresenter 
			                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
			                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
								<Path Fill="{StaticResource Aero2Dark.DataGridColumnHeader.Static.Glyph}" StrokeThickness="1" x:Name="SortArrow" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0 0 4 0"/>
							</Grid>
						</Border>

						<Thumb x:Name="PART_LeftHeaderGripper"
                             HorizontalAlignment="Left"
                             Style="{StaticResource Aero2Dark.DataGrid.ColumnHeaderGripperStyle}"/>
                      <Thumb x:Name="PART_RightHeaderGripper"
                             HorizontalAlignment="Right"
                             Style="{StaticResource Aero2Dark.DataGrid.ColumnHeaderGripperStyle}"/>
                  </Grid>
	              <ControlTemplate.Triggers>
		              <Trigger Property="IsMouseOver" Value="True">
			              <Setter TargetName="HeaderBorder" Property="Background" Value="{StaticResource Aero2Dark.DataGridColumnHeader.Hover.Background}" />
		              </Trigger>
		              <Trigger Property="IsPressed" Value="True">
			              <Setter TargetName="HeaderBorder" Property="Background" Value="{StaticResource Aero2Dark.DataGridColumnHeader.Pressed.Background}" />
		              </Trigger>
		              
		              <Trigger Property="SortDirection" Value="Ascending">
			              <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
			              <Setter TargetName="SortArrow" Property="Data" Value="M 0 4 L 4 0 L 8 4 Z" />
		              </Trigger>
		              <Trigger Property="SortDirection" Value="Descending">
			              <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
			              <Setter TargetName="SortArrow" Property="Data" Value="M 0 0 L 4 4 L 8 0 Z" />
		              </Trigger>
	              </ControlTemplate.Triggers>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>

  <SolidColorBrush x:Key="Aero2Dark.DataGridRowHeader.Static.Background" Color="#2E2E2E"/>
  <SolidColorBrush x:Key="Aero2Dark.DataGridRowHeader.Hover.Background" Color="#3D3D3D"/>
  <SolidColorBrush x:Key="Aero2Dark.DataGridRowHeader.Pressed.Background" Color="#1F1F1F"/>

  <!-- {x:Type DataGridRowHeader} -->
  <Style x:Key="Aero2Dark.DataGridRowHeaderStyle" TargetType="{x:Type DataGridRowHeader}">
    <Setter Property="Background" Value="{StaticResource Aero2Dark.DataGridRowHeader.Static.Background}"/>
	  <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                  <Grid>
                    <!--
	                  <aero2Dark:DataGridHeaderBorder IsSelected="{TemplateBinding IsRowSelected}"
	                                                  IsHovered ="{TemplateBinding IsMouseOver}"
	                                                  IsPressed="{TemplateBinding IsPressed}"
	                                                  Background="{TemplateBinding Background}"
	                                                  BorderBrush="{TemplateBinding BorderBrush}"
	                                                  BorderThickness="{TemplateBinding BorderThickness}"
	                                                  Padding ="{TemplateBinding Padding}"
	                                                  Orientation="Horizontal"
	                                                  SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
	                                                  SeparatorBrush="{TemplateBinding SeparatorBrush}">
                      
                          <StackPanel Orientation="Horizontal">
                              <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"
                                                RecognizesAccessKey="True"/>
                              <Control SnapsToDevicePixels="false"
                                       Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=(Validation.HasError), Converter={StaticResource Aero2Dark.DataGrid.Bool2VisibilityConverter}}"
                                       Template="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=ValidationErrorTemplate}" />
                          </StackPanel>
                      </aero2Dark:DataGridHeaderBorder>
                    -->
	                  <Border 
		                  x:Name="HeaderBorder"
		                  Background="{TemplateBinding Background}" 
		                  BorderBrush="{TemplateBinding BorderBrush}" 
		                  BorderThickness="{TemplateBinding BorderThickness}"
		                  Padding="{TemplateBinding Padding}">
		                  <Grid>
			                  <ContentPresenter 
				                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
				                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
		                  </Grid>
	                  </Border>

                      <Thumb x:Name="PART_TopHeaderGripper"
                             VerticalAlignment="Top"
                             Style="{StaticResource Aero2Dark.DataGrid.RowHeaderGripperStyle}"/>
                      <Thumb x:Name="PART_BottomHeaderGripper"
                             VerticalAlignment="Bottom"
                             Style="{StaticResource Aero2Dark.DataGrid.RowHeaderGripperStyle}"/>
                  </Grid>
	              <ControlTemplate.Triggers>
		              <Trigger Property="IsMouseOver" Value="True">
			              <Setter TargetName="HeaderBorder" Property="Background" Value="{StaticResource Aero2Dark.DataGridRowHeader.Hover.Background}" />
		              </Trigger>
		              <Trigger Property="IsPressed" Value="True">
			              <Setter TargetName="HeaderBorder" Property="Background" Value="{StaticResource Aero2Dark.DataGridRowHeader.Pressed.Background}" />
		              </Trigger>
	              </ControlTemplate.Triggers>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>
</ResourceDictionary>